{"version":3,"sources":["components/Logo/ai.png","components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/SignUp/SignUp.js","components/AgeDetection/AgeDetection.js","components/GenderDetection/GenderDetection.js","components/RegionDetection/RegionDetection.js","components/SettingUpImage/SettingUpImage.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","SignIn","id","htmlFor","type","name","value","href","SignUp","AgeDetection","AgeDetect","GenderDetection","GenderDetect","RegionDetection","RegionDetect","SettingUpImage","imgURL","Box","alt","src","width","height","Logo","tilt_default","options","max","logo","ImageLinkForm","onInputChange","onClickEvent","onChange","app","Clarifai","App","apiKey","parameters","particles","number","density","enable","value_area","size","move","speed","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","input","target","state","models","predict","DEMOGRAPHICS_MODEL","then","response","Data","outputs","data","regions","face","Age","age_appearance","concepts","Gender","gender_appearance","Region","multicultural_appearance","err","route","document","title","_this$state","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_ImageLinkForm_ImageLinkForm","components_SettingUpImage_SettingUpImage","components_AgeDetection_AgeDetection","components_GenderDetection_GenderDetection","components_RegionDetection_RegionDetection","components_SignIn_SignIn","components_SignUp_SignUp","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d521720.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ai.a6bcaa58.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('SignIn')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('SignIn')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n          <p onClick={() => onRouteChange('SignUp')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n        </nav>\r\n    \r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react' ;\r\nconst SignIn = ({onRouteChange}) => {\r\n   return(\r\n    <article className=\"br3 shadow-5 ba  --black-10 pa4 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n            <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 fw6 center ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n                <input \r\n                onClick={()=>onRouteChange('home')}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                type=\"submit\"\r\n                 value=\"Sign in\"\r\n                  />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n                <p onClick={()=>onRouteChange('SignUp')} href=\"#0\" className=\"f6 link dim black db pointer\">Sign up</p>\r\n            </div>\r\n            </div>\r\n        </main>\r\n    </article>\r\n    );\r\n}\r\nexport default SignIn;","import React from 'react' ;\r\nconst SignUp = ({onRouteChange}) => {\r\n   return(\r\n    <article className=\"br3 shadow-5 ba  --black-10 pa4 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n            <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 fw6 center ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n                </div>\r\n                <div className='mt3'>\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n                <input \r\n                onClick={()=>onRouteChange('home')}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                type=\"submit\"\r\n                 value=\"Sign Up\"\r\n                  />\r\n            </div>\r\n            </div>\r\n        </main>\r\n    </article>\r\n    );\r\n}\r\nexport default SignUp;","import React from 'react' ;\r\nconst AgeDetection = ({AgeDetect}) => {\r\n   return(\r\n        <div className='center'>\r\n        <div className='f1 h1 center grow '>\r\n             {AgeDetect}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AgeDetection;","import React from 'react' ;\r\nconst GenderDetection = ({GenderDetect}) => {\r\n    return(\r\n        <div className='center'>\r\n        <div className='f1 h1 center grow pa4'>\r\n             {GenderDetect}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\nexport default GenderDetection;","import React from 'react' ;\r\nconst RegionDetection = ({RegionDetect}) => {\r\n    return(\r\n        <div className='center'>\r\n        <div className='f1 h1 center grow pa3'>\r\n             {RegionDetect}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\nexport default RegionDetection;","import React from 'react' ;\r\nconst SettingUpImage = ({imgURL , Box }) => {\r\n    return(\r\n        <div className='center'>\r\n            <div className='mt3'>\r\n                 <img alt='' src={imgURL} width='500px' height='auto'></img>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default SettingUpImage;\r\n","import React from 'react'; \r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport logo from './ai.png';\r\nconst Logo = () => {\r\n    return(\r\n        <div className=' ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 45 }} style={{ height: 150, width: 150 }} >\r\n             <div className=\"Tilt-inner\"> <img alt='Logo' src={logo}></img> </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\nexport default Logo ;","import React from 'react'; \r\nimport './ImageLinkForm.css';\r\n\r\n\r\nconst ImageLinkForm = ({onInputChange , onClickEvent}) => {\r\n    return(\r\n        <div className='f3'>\r\n            <p>{'This App Will Try To Detect Age , Gender and Region of Image , Give It a Try (Enter URL of Image)'} </p>\r\n            <div className='center'>\r\n                <div className='form center br3 pa4 shadow-5'>\r\n                    <input className='w-70 f4 pa2 center' type='text' onChange={onInputChange}></input>\r\n                    <button className='w-30 ph3 pv2 dib f4 grow link' onClick={onClickEvent}>{'Detect'}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ImageLinkForm ;","import React , {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation.js';\nimport SignIn from './components/SignIn/SignIn.js';\nimport SignUp from './components/SignUp/SignUp.js';\nimport AgeDetection from './components/AgeDetection/AgeDetection.js';\nimport GenderDetection from './components/GenderDetection/GenderDetection.js';\nimport RegionDetection from './components/RegionDetection/RegionDetection.js';\nimport SettingUpImage from './components/SettingUpImage/SettingUpImage.js';\nimport './App.css';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Clarifai from 'clarifai';\n\n const app = new Clarifai.App({\n  apiKey: 'cac51409614642bcadcc5350b86fc1c5'\n });\n\nconst parameters = {\n          particles: {\n              number: {\n                  value :150,\n                    density: {\n                      enable : true ,\n                      value_area : 1000\n                      }\n                  },\n              size : {\n                  value : 3.9\n              },\n              move : {\n                  speed : 12.6 \n              }\n            },\n           \n        }\n    \nclass App extends Component {\n     constructor() {\n       super();\n        this.state = {\n            input: '',\n            imgURL: '',\n            AgeDetect: '',\n            GenderDetect:'',\n            RegionDetect:'',\n            route : 'SignIn',\n            isSignedIn : false\n            };\n          }\n      onInputChange = event => {\n          this.setState({ input: event.target.value });\n        };\n        \n      onClickEvent = () => {\n          this.setState({ imgURL: this.state.input });\n            app.models.predict(Clarifai.DEMOGRAPHICS_MODEL, this.state.input).then(\n              response => {\n                const Data =\n                     response.outputs[0].data.regions[0].data.face\n                const Age = Data.age_appearance.concepts[0].name;\n                const Gender = Data.gender_appearance.concepts[0].name;\n                const Region = Data.multicultural_appearance.concepts[0].name;\n                this.setState({ AgeDetect: Age });\n                this.setState({ GenderDetect: Gender });\n                this.setState({ RegionDetect: Region });\n              },\n              function(err) {\n                // there was an error\n              }\n             );\n             \n            \n          };\n   onRouteChange = (route) =>{\n     if(route === 'SignIn'){\n       this.setState({ isSignedIn : false });\n     }\n     else if (route === 'home'){\n       this.setState({isSignedIn: true });\n     }\n    this.setState({route: route}) \n   };\n   componentWillMount() {\n        document.title = 'Artificial Intelligence'\n          };\n        \n\n  render(){\n  const { isSignedIn , route , imgURL , AgeDetect , GenderDetect , RegionDetect } = this.state\n  return (\n   <div className=\"App\">\n      <Particles className='particles'\n          params={parameters} />\n     <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\n     {route === 'home'\n     ?<div><Logo />\n     <ImageLinkForm onInputChange={this.onInputChange} onClickEvent={this.onClickEvent} />\n     <SettingUpImage imgURL={imgURL} />\n     <AgeDetection AgeDetect={AgeDetect} />\n     <GenderDetection GenderDetect={GenderDetect}/>\n     <RegionDetection RegionDetect={RegionDetect}/>\n     </div>\n    :( route === \"SignIn\"\n        ?<SignIn onRouteChange={this.onRouteChange}/>\n        :<SignUp onRouteChange={this.onRouteChange}/>  \n    )\n    }\n     </div>\n  );\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons' ; \n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}