{"version":3,"sources":["components/Logo/ai.png","components/Navigation/Navigation.js","components/AgeDetection/AgeDetection.js","components/GenderDetection/GenderDetection.js","components/RegionDetection/RegionDetection.js","components/FaceRecognition/FaceRecognition.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navgation","react_default","a","createElement","style","display","justifyContent","className","AgeDetection","_ref","AgeDetect","GenderDetection","GenderDetect","RegionDetection","RegionDetect","FaceRecognition","imgURL","alt","src","width","height","Logo","tilt_default","options","max","logo","ImageLinkForm","onInputChange","onClickEvent","type","onChange","onClick","app","Clarifai","App","apiKey","parameters","particles","number","value","density","enable","value_area","size","move","speed","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","input","target","state","models","predict","DEMOGRAPHICS_MODEL","then","response","A","outputs","data","regions","face","age_appearance","concepts","name","err","B","gender_appearance","C","multicultural_appearance","document","title","console","log","particles_default","params","Navigation","components_Logo_Logo","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_AgeDetection_AgeDetection","components_GenderDetection_GenderDetection","components_RegionDetection_RegionDetection","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.107079f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ai.a6bcaa58.png\";","import React from 'react' ;\r\nconst Navgation = () => {\r\n    return(\r\n        <nav style={{display : 'flex' , justifyContent : 'right' }}>\r\n            <p className= 'pa3 link dim black pointer ' >\r\n                Sign Out\r\n            </p>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navgation;","import React from 'react' ;\r\nconst AgeDetection = ({AgeDetect}) => {\r\n    return(\r\n        <div className='center'>\r\n        <div className='f1 h1 center grow '>\r\n             {AgeDetect}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AgeDetection;","import React from 'react' ;\r\nconst GenderDetection = ({GenderDetect}) => {\r\n    return(\r\n        <div className='center'>\r\n        <div className='f1 h1 center grow pa4'>\r\n             {GenderDetect}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\nexport default GenderDetection;","import React from 'react' ;\r\nconst RegionDetection = ({RegionDetect}) => {\r\n    return(\r\n        <div className='center'>\r\n        <div className='f1 h1 center grow pa3'>\r\n             {RegionDetect}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\nexport default RegionDetection;","import React from 'react' ;\r\nconst FaceRecognition = ({imgURL}) => {\r\n    return(\r\n        <div className='center'>\r\n            <div className='mt3'>\r\n\r\n            <img alt='' src={imgURL} width='500px' height='auto'></img>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default FaceRecognition;\r\n","import React from 'react'; \r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport logo from './ai.png';\r\nconst Logo = () => {\r\n    return(\r\n        <div className=' ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 45 }} style={{ height: 150, width: 150 }} >\r\n             <div className=\"Tilt-inner\"> <img alt='Logo' src={logo}></img> </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\nexport default Logo ;","import React from 'react'; \r\nimport './ImageLinkForm.css';\r\n\r\n\r\nconst ImageLinkForm = ({onInputChange , onClickEvent}) => {\r\n    return(\r\n        <div className='f3'>\r\n            <p>{'This App Will Try To Detect Age , Gender and Region of Image , Give It a Try (Enter URL of Image)'} </p>\r\n            <div className='center'>\r\n                <div className='form center br3 pa4 shadow-5'>\r\n                    <input className='w-70 f4 pa2 center' type='text' onChange={onInputChange}></input>\r\n                    <button className='w-30 ph3 pv2 dib f4 grow link' onClick={onClickEvent}>{'Detect'}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ImageLinkForm ;","import React , {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation.js';\nimport AgeDetection from './components/AgeDetection/AgeDetection.js';\nimport GenderDetection from './components/GenderDetection/GenderDetection.js';\nimport RegionDetection from './components/RegionDetection/RegionDetection.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport './App.css';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Clarifai from 'clarifai';\n\n const app = new Clarifai.App({\n  apiKey: 'cac51409614642bcadcc5350b86fc1c5'\n });\n\nconst parameters = {\n          particles: {\n              number: {\n                  value :150,\n                    density: {\n                      enable : true ,\n                      value_area : 1000\n                      }\n                  },\n              size : {\n                  value : 3.9\n              },\n              move : {\n                  speed : 12.6 \n              }\n            },\n           \n        }\n    \nclass App extends Component {\n     constructor() {\n       super();\n        this.state = {\n            input: '',\n            imgURL: '',\n            AgeDetect: '',\n            GenderDetect:'',\n            RegionDetect:''\n            };\n          }\n      onInputChange = event => {\n          this.setState({ input: event.target.value });\n        };\n        \n      onClickEvent = () => {\n          this.setState({ imgURL: this.state.input });\n            app.models.predict(Clarifai.DEMOGRAPHICS_MODEL, this.state.input).then(\n              response => {\n                const A =\n                  response.outputs[0].data.regions[0].data.face.age_appearance\n                    .concepts[0].name;\n        \n                this.setState({ AgeDetect: A });\n              },\n              function(err) {\n                // there was an error\n              }\n             );\n             app.models.predict(Clarifai.DEMOGRAPHICS_MODEL, this.state.input).then(\n              response => {\n                const B =\n                  response.outputs[0].data.regions[0].data.face.gender_appearance.concepts[0].name;\n          \n               this.setState({ GenderDetect: B });\n              },\n              function(err) {\n                // there was an error\n              });\n              app.models.predict(Clarifai.DEMOGRAPHICS_MODEL, this.state.input).then(\n                response => {\n                  const C =\n                    response.outputs[0].data.regions[0].data.face.multicultural_appearance.concepts[0].name;\n              \n                 this.setState({ RegionDetect: C });\n                },\n                function(err) {\n                  // there was an error\n                });\n          };\n   componentWillMount() {\n        document.title = 'Artificial Intelligence'\n          };\n        \n\n  render(){\n    console.log(this.state);\n  return (\n   <div className=\"App\">\n      <Particles className='particles'\n          params={parameters} />\n     <Navigation />\n     <Logo />\n    <ImageLinkForm onInputChange={this.onInputChange} onClickEvent={this.onClickEvent} />\n    <FaceRecognition imgURL={this.state.imgURL} />\n    <AgeDetection AgeDetect={this.state.AgeDetect}/>\n    <GenderDetection GenderDetect={this.state.GenderDetect}/>\n    <RegionDetection RegionDetect={this.state.RegionDetect}/>\n\n     </div>\n  );\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons' ; \n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}